[1] "D:\\courses\\Data_Science\\DoE\\My_R_codes\\code"  
[2] "D:\\courses\\Data_Science\\DoE\\My_R_codes\\output"

dir.data:  D:\courses\Data_Science\DoE\My_R_codes\code
dir.code:  D:\courses\Data_Science\DoE\My_R_codes\code
dir.out:   D:\courses\Data_Science\DoE\My_R_codes\output

##### Sys.time():  2020-04-21 09:44:05 EDT 

##################################################

##################################################
starting: frac.fac.design()
 
 Fractional Design:k=7,p=2
 print(fractional.factorial.design )
   ntree mtry replace nodesize classwt cutoff maxnodes
1     -1    1      -1       -1       1      1        1
2      1   -1      -1        1      -1      1        1
3      1    1       1        1       1      1        1
4      1    1      -1        1       1     -1        1
5     -1    1      -1        1       1      1       -1
6      1   -1       1       -1       1     -1        1
7      1   -1       1        1      -1     -1        1
8     -1   -1       1        1       1      1        1
9     -1    1       1       -1       1     -1        1
10    -1    1      -1       -1      -1      1       -1
11    -1    1       1       -1      -1     -1       -1
12    -1   -1      -1       -1      -1     -1        1
13    -1   -1      -1        1       1     -1        1
14    -1   -1       1       -1      -1      1        1
15    -1   -1       1        1      -1      1       -1
16     1    1       1       -1      -1      1        1
17    -1   -1      -1        1      -1     -1       -1
18    -1    1       1        1      -1     -1        1
19     1   -1      -1       -1       1      1        1
20     1    1       1        1      -1      1       -1
21     1    1      -1        1      -1     -1       -1
22     1   -1      -1        1       1      1       -1
23    -1    1      -1        1      -1      1        1
24     1    1      -1       -1      -1     -1        1
25     1    1       1       -1       1      1       -1
26     1   -1       1        1       1     -1       -1
27    -1   -1       1       -1       1      1       -1
28    -1   -1      -1       -1       1     -1       -1
29     1   -1      -1       -1      -1      1       -1
30     1   -1       1       -1      -1     -1       -1
31     1    1      -1       -1       1     -1       -1
32    -1    1       1        1       1     -1       -1
class=design, type= FrF2 
NULL
 summary(fractional.factorial.design )
Call:
FrF2((nruns = 2^(kFactors - pFactors)), nfactors = kFactors, 
    factor.names = list(ntree = c(-1, 1), mtry = c(-1, 1), replace = c(-1, 
        1), nodesize = c(-1, 1), classwt = c(-1, 1), cutoff = c(-1, 
        1), maxnodes = c(-1, 1)), seed = 6285)

Experimental design of type  FrF2 
32  runs

Factor settings (scale ends):
  ntree mtry replace nodesize classwt cutoff maxnodes
1    -1   -1      -1       -1      -1     -1       -1
2     1    1       1        1       1      1        1

Design generating information:
$legend
[1] A=ntree    B=mtry     C=replace  D=nodesize E=classwt  F=cutoff   G=maxnodes

$generators
[1] F=ABC  G=ABDE


Alias structure:
$fi2
[1] AB=CF AC=BF AF=BC


The design itself:
   ntree mtry replace nodesize classwt cutoff maxnodes
1     -1    1      -1       -1       1      1        1
2      1   -1      -1        1      -1      1        1
3      1    1       1        1       1      1        1
4      1    1      -1        1       1     -1        1
5     -1    1      -1        1       1      1       -1
6      1   -1       1       -1       1     -1        1
7      1   -1       1        1      -1     -1        1
8     -1   -1       1        1       1      1        1
9     -1    1       1       -1       1     -1        1
10    -1    1      -1       -1      -1      1       -1
11    -1    1       1       -1      -1     -1       -1
12    -1   -1      -1       -1      -1     -1        1
13    -1   -1      -1        1       1     -1        1
14    -1   -1       1       -1      -1      1        1
15    -1   -1       1        1      -1      1       -1
16     1    1       1       -1      -1      1        1
17    -1   -1      -1        1      -1     -1       -1
18    -1    1       1        1      -1     -1        1
19     1   -1      -1       -1       1      1        1
20     1    1       1        1      -1      1       -1
21     1    1      -1        1      -1     -1       -1
22     1   -1      -1        1       1      1       -1
23    -1    1      -1        1      -1      1        1
24     1    1      -1       -1      -1     -1        1
25     1    1       1       -1       1      1       -1
26     1   -1       1        1       1     -1       -1
27    -1   -1       1       -1       1      1       -1
28    -1   -1      -1       -1       1     -1       -1
29     1   -1      -1       -1      -1      1       -1
30     1   -1       1       -1      -1     -1       -1
31     1    1      -1       -1       1     -1       -1
32    -1    1       1        1       1     -1       -1
class=design, type= FrF2 
NULL

exiting: frac.fac.design()
##################################################

##################################################
starting: RF.frcfac.results()
[1] 32561
[1] 15
 
 Fractional Design:resolution=IV
[1] "fold 1 of run 1"

##################################################
starting: cross.validation()

 str(train)
'data.frame':	21978 obs. of  15 variables:
 $ age           : int  51 53 18 29 26 21 64 51 50 59 ...
 $ workclass     : Factor w/ 9 levels " ?"," Federal-gov",..: 5 7 1 7 5 5 6 5 5 5 ...
 $ fnlwgt        : int  53833 46704 173125 229842 195327 182117 165667 207449 548361 207391 ...
 $ education     : Factor w/ 16 levels " 10th"," 11th",..: 12 13 3 12 12 16 11 10 10 12 ...
 $ education.num : int  9 14 8 9 9 10 16 13 13 9 ...
 $ marital.status: Factor w/ 7 levels " Divorced"," Married-AF-spouse",..: 3 3 5 5 5 5 3 3 3 1 ...
 $ occupation    : Factor w/ 15 levels " ?"," Adm-clerical",..: 11 11 1 15 13 9 11 5 14 8 ...
 $ relationship  : Factor w/ 6 levels " Husband"," Not-in-family",..: 1 1 4 5 4 4 1 1 1 2 ...
 $ race          : Factor w/ 5 levels " Amer-Indian-Eskimo",..: 5 5 5 3 5 5 5 5 5 5 ...
 $ sex           : Factor w/ 2 levels " Female"," Male": 2 2 1 2 2 2 2 2 2 2 ...
 $ capital.gain  : int  0 0 0 0 0 0 7688 0 0 0 ...
 $ capital.loss  : int  0 0 0 0 0 0 0 0 0 0 ...
 $ hours.per.week: int  46 50 24 45 40 15 60 55 20 40 ...
 $ native.country: Factor w/ 42 levels " ?"," Cambodia",..: 40 40 40 40 40 40 3 40 40 40 ...
 $ my_res        : Factor w/ 2 levels "0","1": 1 1 2 2 2 2 1 2 1 2 ...
NULL

 str(validation)
'data.frame':	7326 obs. of  15 variables:
 $ age           : int  50 28 37 42 30 34 25 35 19 49 ...
 $ workclass     : Factor w/ 9 levels " ?"," Federal-gov",..: 7 5 5 5 8 5 7 2 5 5 ...
 $ fnlwgt        : int  83311 338409 284582 159449 141297 245487 176756 76845 168294 193366 ...
 $ education     : Factor w/ 16 levels " 10th"," 11th",..: 10 10 13 10 10 6 12 7 12 12 ...
 $ education.num : int  13 13 14 13 13 4 9 5 9 9 ...
 $ marital.status: Factor w/ 7 levels " Divorced"," Married-AF-spouse",..: 3 3 3 3 3 3 5 3 5 3 ...
 $ occupation    : Factor w/ 15 levels " ?"," Adm-clerical",..: 5 11 5 5 11 15 6 6 4 4 ...
 $ relationship  : Factor w/ 6 levels " Husband"," Not-in-family",..: 1 6 6 1 1 1 4 1 4 1 ...
 $ race          : Factor w/ 5 levels " Amer-Indian-Eskimo",..: 5 3 5 5 2 1 5 3 5 5 ...
 $ sex           : Factor w/ 2 levels " Female"," Male": 2 1 1 2 2 2 2 2 2 2 ...
 $ capital.gain  : int  0 0 0 5178 0 0 0 0 0 0 ...
 $ capital.loss  : int  0 0 0 0 0 0 0 0 0 0 ...
 $ hours.per.week: int  13 40 40 40 40 45 35 40 40 40 ...
 $ native.country: Factor w/ 42 levels " ?"," Cambodia",..: 40 6 40 40 20 27 40 40 40 40 ...
 $ my_res        : Factor w/ 2 levels "0","1": 2 2 2 1 1 2 2 2 2 2 ...
NULL

 str(validation)
'data.frame':	7326 obs. of  15 variables:
 $ age           : int  50 28 37 42 30 34 25 35 19 49 ...
 $ workclass     : Factor w/ 9 levels " ?"," Federal-gov",..: 7 5 5 5 8 5 7 2 5 5 ...
 $ fnlwgt        : int  83311 338409 284582 159449 141297 245487 176756 76845 168294 193366 ...
 $ education     : Factor w/ 16 levels " 10th"," 11th",..: 10 10 13 10 10 6 12 7 12 12 ...
 $ education.num : int  13 13 14 13 13 4 9 5 9 9 ...
 $ marital.status: Factor w/ 7 levels " Divorced"," Married-AF-spouse",..: 3 3 3 3 3 3 5 3 5 3 ...
 $ occupation    : Factor w/ 15 levels " ?"," Adm-clerical",..: 5 11 5 5 11 15 6 6 4 4 ...
 $ relationship  : Factor w/ 6 levels " Husband"," Not-in-family",..: 1 6 6 1 1 1 4 1 4 1 ...
 $ race          : Factor w/ 5 levels " Amer-Indian-Eskimo",..: 5 3 5 5 2 1 5 3 5 5 ...
 $ sex           : Factor w/ 2 levels " Female"," Male": 2 1 1 2 2 2 2 2 2 2 ...
 $ capital.gain  : int  0 0 0 5178 0 0 0 0 0 0 ...
 $ capital.loss  : int  0 0 0 0 0 0 0 0 0 0 ...
 $ hours.per.week: int  13 40 40 40 40 45 35 40 40 40 ...
 $ native.country: Factor w/ 42 levels " ?"," Cambodia",..: 40 6 40 40 20 27 40 40 40 40 ...
 $ my_res        : Factor w/ 2 levels "0","1": 2 2 2 1 1 2 2 2 2 2 ...
NULL

exiting: cross.validation()
##################################################

##################################################
starting: fmeasure.func()

 print(confusion.train)
          Reference
Prediction     0     1
         0  3801    53
         1  1443 16681

 print(confusion.valid)
          Reference
Prediction    0    1
         0  742  170
         1 1069 5345

 print(confusion.test)
          Reference
Prediction    0    1
         0  303   63
         1  483 2408

 print(confmtrx.train)
$n.tp
[1] 3801

$n.fn
[1] 53

$n.fp
[1] 1443

$n.tn
[1] 16681


 print(confmtrx.valid)
$n.tp
[1] 742

$n.fn
[1] 170

$n.fp
[1] 1069

$n.tn
[1] 5345


 print(confmtrx.test)
$n.tp
[1] 303

$n.fn
[1] 63

$n.fp
[1] 483

$n.tn
[1] 2408

